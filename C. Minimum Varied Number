#include <bits/stdc++.h>

#define sqr(x)        (x) * (x)
#define sz(x)         (int)x.size()
#define all(x)        (x).begin(), (x).end()
#define rall(x)       (x).rbegin(), (x).rend()
#define prec(x)       fixed << setprecision(x)
#define testcase      cout << "Case " << tc++ << ": "
#define sr            ios_base::sync_with_stdio(false); cin.tie(nullptr)

using namespace std;

using ll = long long;
using ld = long double;
using ull = unsigned long long;
const ld PI = acos(-1.0);
const ll MOD = 1e9 + 7;
const ld EPS = 1e-9;
const ll N = 2e5 + 5;
int tc = 1;

///...(__________________________(mdrayhan75)____________________________)...///
void solve() {
    int s;
    cin >> s;
    vector<int> chosen;
    // Greedily pick largest digits 9..1 while s > 0
    for (int d = 9; d >= 1 && s > 0; --d) {
        if (s >= d) {
            chosen.push_back(d);
            s -= d;
        }
    }
    // Now s must be zero (since sum<=45). To minimize the number, sort ascending.
    sort(all(chosen));
    for (int d : chosen) {
        cout << d;
    }
    cout << "\n";
}

int main() {
    sr;
    int T;
    cin >> T;
    while (T--) {
        solve();
    }
    return 0;
}
